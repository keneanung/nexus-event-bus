<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://keneanung.github.io/nexus-event-bus/blog</id>
    <title>Iron Realms Nexus Event Bus Blog</title>
    <updated>2022-05-21T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://keneanung.github.io/nexus-event-bus/blog"/>
    <subtitle>Iron Realms Nexus Event Bus Blog</subtitle>
    <icon>https://keneanung.github.io/nexus-event-bus/img/favicon.ico</icon>
    <rights>Copyright © 2023 keneanung</rights>
    <entry>
        <title type="html"><![CDATA[Developer Experience: v0.4.0]]></title>
        <id>/2022/05/21/_Developer_Experience</id>
        <link href="https://keneanung.github.io/nexus-event-bus/blog/2022/05/21/_Developer_Experience"/>
        <updated>2022-05-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This release focuses mainly on the developer experience and only has a minor change for users.]]></summary>
        <content type="html"><![CDATA[<p>This release focuses mainly on the developer experience and only has a minor change for users.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="error-messages-now-include-callback-name-and-event-name">Error messages now include callback name and event name<a class="hash-link" href="#error-messages-now-include-callback-name-and-event-name" title="Direct link to heading">​</a></h2><p>If a callback errors, error messages would simply print the error message and a stacktrace. This has been enhanced to include the callback and event names.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="developer-experience-changes">Developer experience changes<a class="hash-link" href="#developer-experience-changes" title="Direct link to heading">​</a></h2><p>To improve the developer experience, the following changes have been made:</p><ul><li>The TypeScript code allows the usage of the latest syntax. The code is then transpiled to older JavaScript compatibility using Babel.</li><li>Explicitly define the supported browsers. Most notably, Internet Explorer 11 is not supported as it increases the code size immensely and is not officially supported by Microsoft anymore.</li><li>Configure StrykerJS. This is a tool that can find holes in your test coverage by mutating your code with common programming mistakes and making sure your tests catch those.</li></ul><p>If you find bugs, would like to see more features and discuss particular design choices, feel free to <a href="https://github.com/keneanung/nexus-event-bus/issues/new" target="_blank" rel="noopener noreferrer">create a new issue</a> to get in touch.</p><p>If you like my work and want to support me, please consider <a href="https://github.com/sponsors/keneanung" target="_blank" rel="noopener noreferrer">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Finetuning: v0.3.0]]></title>
        <id>/2022/05/11/_Finetuning</id>
        <link href="https://keneanung.github.io/nexus-event-bus/blog/2022/05/11/_Finetuning"/>
        <updated>2022-05-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This release contains a number of small bits and bops here and there to finetune the package and give it some extra shine:]]></summary>
        <content type="html"><![CDATA[<p>This release contains a number of small bits and bops here and there to finetune the package and give it some extra shine:</p><ul><li>Fix a possible security issue due to <a href="https://portswigger.net/daily-swig/prototype-pollution-the-dangerous-and-underrated-vulnerability-impacting-javascript-applications" target="_blank" rel="noopener noreferrer">prototype polution</a></li><li>Inject version number into loading log message</li><li>Add hack to get the Map class back</li><li>Move raising specialized gmcp events to the NXS package for improved visibility and document them</li></ul>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Random Values: v0.2.0]]></title>
        <id>/2022/05/04/_Fix_random_values</id>
        <link href="https://keneanung.github.io/nexus-event-bus/blog/2022/05/04/_Fix_random_values"/>
        <updated>2022-05-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The new Nexus client will be available on multiple platforms, using React Native. During testing, people noticed that the Web API for generating cryptographically secure random numbers are not available and thus the UUID package we depend on was unable to load.]]></summary>
        <content type="html"><![CDATA[<p>The new Nexus client will be available on multiple platforms, using React Native. During testing, people noticed that the Web API for generating cryptographically secure random numbers are not available and thus the UUID package we depend on was unable to load.</p><p>A proper polyfill is curently impossible as we can not ship Java modules in Nexus packages. Luckily, the UUID package allows to supply a custom function for generating the required random values. As a workaround, this functionality was used in connection with Math.random to supply the needed information.</p><p>That means however, that our UUIDs are not as random as they usually are. But for our use case of generating random names, this should be good enough.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Khaseems Wishlist: v0.1.1]]></title>
        <id>/2022/04/27/_Khaseems_Wishlist</id>
        <link href="https://keneanung.github.io/nexus-event-bus/blog/2022/04/27/_Khaseems_Wishlist"/>
        <updated>2022-04-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This release is something, the Achaean Player Khaseem wished for. He's been using the original EventStream module of NexSys very extenively. However, he'd like to move to an external package to help the adoption of a standard set of Nexus packages.]]></summary>
        <content type="html"><![CDATA[<p>This release is something, the Achaean Player Khaseem wished for. He's been using the original EventStream module of NexSys very extenively. However, he'd like to move to an external package to help the adoption of a standard set of Nexus packages.</p><p>The original EventStream had a set of features that were part of his development flow: The ability to unsubscribe from events using a function name and access to the list of subscribers to an event.</p><p>While the former is about a preferred coding style, the latter is useful for debugging code: That way you can easily have a look at the list of subscribers to an event and determine if all subscribers actually belong there at this point.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a class="hash-link" href="#new-features" title="Direct link to heading">​</a></h2><p>You may now subscribe or unsubscribe to events using a callback function name instead of a function reference. To avoid accidental overwriting of existing callbacks, especially between different users of the EventBus, duplicate subscription names generate an error. So you may want to namespace your event names.</p><p>You can now access the list of subscribers to an event using the <code>getSubscribers</code> method. This allows easy inspection of the subscription state of callbacks. The subscribers may not be changed this way.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Initial Release v0.0.3]]></title>
        <id>/2022/04/11/_Initial_Release</id>
        <link href="https://keneanung.github.io/nexus-event-bus/blog/2022/04/11/_Initial_Release"/>
        <updated>2022-04-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hello World!]]></summary>
        <content type="html"><![CDATA[<p><code>Hello World!</code></p><p>And with that out of the way, I present the first release on my event bus package for the Nexus MUD client.</p><p>While there are already implementations of the event bus for the Nexus MUD client (ie as part of the NexSys and NexGUI projects), I wanted to make a package that is not part of a larger project. Instead this project can be installed individually and be used as a dependency for other projects. This should make it easier for the community to adapt a set of lightweight standard packages that still allow the users a large amount of flexibility to use the packages they like.</p><p>This release is the minimal viable product and contains the most basic functionality: Registering event handlers, raising events and unregistering event handlers. The <a href="https://keneanung.github.io/nexus-event-bus/docs/api" target="_blank" rel="noopener noreferrer">API documentation</a> has all the gritty details.</p><p>More features may be added in the future. Feel free to <a href="https://github.com/keneanung/nexus-event-bus/issues/new" target="_blank" rel="noopener noreferrer">create a new issue</a> to discuss further extensions.</p><p>If you like my work and want to support me, please consider <a href="https://github.com/sponsors/keneanung" target="_blank" rel="noopener noreferrer">sponsoring me</a>.</p><p>Oh, and why is the initial release version <code>0.0.3</code>? Well, I messed up the packaging, so I had to redo it a few times. I'm sorry.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
    </entry>
</feed>